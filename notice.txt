开发流程：
页面需求分析--接口设计规定数据结构(接口文档)--确定主要应用技术(vue+elementui)--搭建环境(vue-cli)--页面结构分析--页面开发--接口联调--测试

问题：
1、什么是模块化？什么是组件化？
模块化是把页面根据功能分部分开发，组件化是把每一个模块单独独立出来，把模块更加细化了。
方便复用。
2、vue的特点？
数据的双向绑定，结合数据劫持和发布订阅，利用Object.defineProperty实现，可以监听对象属性的变化，然后给input框加一个input的事件。
3、vue和react的区别？
数据的绑定：双向数据绑定
渐进式   MVVM
修改页面的时候，不是直接的渲染视图，而是通过虚拟的dom,对比与真实的dom有什么不同，进而更新。

diff算法？？？

都是用虚拟dom实现的视图渲染，react不是MVC MVVM的结构

都是轻量级，响应式组件，服务器端渲染，易于继承路由工具，打包工具以及状态管理工具

vue的优势：
模板和渲染函数的弹性选择
简单的语法及项目创建
更快的渲染速度和更小的体积

react的优势

4、vue生命周期
创建前后，渲染前后，更新前后，销毁前后

5、组件与组件之间数据交互如何实现（组件通信）
父--》子  props         chidren  $attr
子--》父  $emit   parent
子--》子
vuex状态管理
events bus

6、mutations和actions的区别？
actions调试异步时比较方便，在actions里做异步处理
mutations不方便调试异步，在mutations里面做同步处理

7、自定义指令的用途：可以实现一些自己想要的功能
vm.directives

8、vm.filter过滤器？

9、computed和methods watch的区别？
methods不断监听，不管是否改变，每次渲染都会调用
computed监听变化，数据变化的时候才会触发，一个数据由多个数据所影响，有缓存机制
watch：一次只能观察一个数据，观察的是本身存在的数据，可以执行异步










